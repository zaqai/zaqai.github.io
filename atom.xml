<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://blog.zaqai.com/atom.xml" rel="self"/>
  
  <link href="https://blog.zaqai.com/"/>
  <updated>2023-12-31T09:10:32.115Z</updated>
  <id>https://blog.zaqai.com/</id>
  
  <author>
    <name>zaqai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://blog.zaqai.com/2023/12/31/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E6%98%BE%E7%A4%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BF%A1%E6%81%AF%E7%9A%84%E8%84%9A%E6%9C%AC/"/>
    <id>https://blog.zaqai.com/2023/12/31/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E6%98%BE%E7%A4%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BF%A1%E6%81%AF%E7%9A%84%E8%84%9A%E6%9C%AC/</id>
    <published>2023-12-31T09:10:32.051Z</published>
    <updated>2023-12-31T09:10:32.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一些有用的显示服务器信息的脚本"><a href="#一些有用的显示服务器信息的脚本" class="headerlink" title="一些有用的显示服务器信息的脚本"></a>一些有用的显示服务器信息的脚本</h1><blockquote><p>ssh登录服务器的时候最先看到的便是一些欢迎的信息, 但默认的欢迎信息可以说是毫无用处, 我们便可以自行修改来展示一些有用的信息.</p></blockquote><p><img src="https://oss.zaqai.com/img/202312302351397.png" alt="image-20231230235121076"></p><h2 id="motd"><a href="#motd" class="headerlink" title="motd"></a>motd</h2><p>motd, 全称Message Of The Day, 是Linux中发送问候消息的功能, 每次任意用户登录时都会触发motd服务的功能, 这个功能的脚本几乎都是使用root 权限来启动的</p><p>脚本位置在<code>/etc/update-motd.d</code>, 不想执行某些脚本, 可以直接取消执行权限</p><p><img src="https://oss.zaqai.com/img/202312302355753.png" alt="image-20231230235518657"></p><h2 id="10-hostname-color"><a href="#10-hostname-color" class="headerlink" title="10-hostname-color"></a>10-hostname-color</h2><p>类似于logo banner之类的东西, 比如Spring Boot项目启动后就会显示<code>Spring Boot</code>的logo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">/usr/bin/figlet <span class="string">&quot;<span class="subst">$(hostname)</span>&quot;</span> | /usr/bin/lolcat -f</span><br></pre></td></tr></table></figure><h2 id="10-uname"><a href="#10-uname" class="headerlink" title="10-uname"></a>10-uname</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">uname</span> -snrvm</span><br></pre></td></tr></table></figure><h2 id="20-sysinfo"><a href="#20-sysinfo" class="headerlink" title="20-sysinfo"></a>20-sysinfo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get load averages</span></span><br><span class="line">IFS=<span class="string">&quot; &quot;</span> <span class="built_in">read</span> LOAD1 LOAD5 LOAD15 &lt;&lt;&lt;$(<span class="built_in">cat</span> /proc/loadavg | awk <span class="string">&#x27;&#123; print $1,$2,$3 &#125;&#x27;</span>)</span><br><span class="line"><span class="comment"># get free memory</span></span><br><span class="line">IFS=<span class="string">&quot; &quot;</span> <span class="built_in">read</span> USED AVAIL TOTAL &lt;&lt;&lt;$(free -htm | sed -n <span class="string">&#x27;2p&#x27;</span> | awk &#123;<span class="string">&#x27;print $3,$7,$2&#x27;</span>&#125;)</span><br><span class="line"><span class="comment"># get processes</span></span><br><span class="line">PROCESS=`ps -eo user=|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c | awk <span class="string">&#x27;&#123; print $2 &quot; &quot; $1 &#125;&#x27;</span>`</span><br><span class="line">PROCESS_ALL=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PROCESS</span>&quot;</span>| awk &#123;<span class="string">&#x27;print $2&#x27;</span>&#125; | awk <span class="string">&#x27;&#123; SUM += $1&#125; END &#123; print SUM &#125;&#x27;</span>`</span><br><span class="line">PROCESS_ROOT=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PROCESS</span>&quot;</span>| grep root | awk &#123;<span class="string">&#x27;print $2&#x27;</span>&#125;`</span><br><span class="line">PROCESS_USER=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PROCESS</span>&quot;</span>| grep -v root | awk &#123;<span class="string">&#x27;print $2&#x27;</span>&#125; | awk <span class="string">&#x27;&#123; SUM += $1&#125; END &#123; print SUM &#125;&#x27;</span>`</span><br><span class="line"><span class="comment"># get processors</span></span><br><span class="line">PROCESSOR_NAME=`grep <span class="string">&quot;model name&quot;</span> /proc/cpuinfo | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f3- | awk &#123;<span class="string">&#x27;print $0&#x27;</span>&#125; | <span class="built_in">head</span> -1`</span><br><span class="line">PROCESSOR_COUNT=`grep -ioP <span class="string">&#x27;processor\t:&#x27;</span> /proc/cpuinfo | <span class="built_in">wc</span> -l`</span><br><span class="line"></span><br><span class="line">W=<span class="string">&quot;\e[0;39m&quot;</span></span><br><span class="line">G=<span class="string">&quot;\e[1;32m&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="variable">$&#123;W&#125;</span>system info:</span></span><br><span class="line"><span class="string"><span class="variable">$W</span>  Distro......: <span class="variable">$W</span>`cat /etc/*release | grep &quot;</span>PRETTY_NAME<span class="string">&quot; | cut -d &quot;</span>=<span class="string">&quot; -f 2- | sed &#x27;s/&quot;</span>//g<span class="string">&#x27;`</span></span><br><span class="line"><span class="string">$W  Kernel......: $W`uname -sr`</span></span><br><span class="line"><span class="string">$W  Uptime......: $W`uptime -p`</span></span><br><span class="line"><span class="string">$W  Load........: $G$LOAD1$W (1m), $G$LOAD5$W (5m), $G$LOAD15$W (15m)</span></span><br><span class="line"><span class="string">$W  Processes...:$W $G$PROCESS_ROOT$W (root), $G$PROCESS_USER$W (user), $G$PROCESS_ALL$W (total)</span></span><br><span class="line"><span class="string">$W  CPU.........: $W$PROCESSOR_NAME ($G$PROCESSOR_COUNT$W vCPU)</span></span><br><span class="line"><span class="string">$W  Memory......: $G$USED$W used, $G$AVAIL$W avail, $G$TOTAL$W total$W &quot;</span></span><br></pre></td></tr></table></figure><h2 id="30-gpu-utility"><a href="#30-gpu-utility" class="headerlink" title="30-gpu-utility"></a>30-gpu-utility</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\ngpu utility:\n&quot;</span></span><br><span class="line">GPUNUM=`nvidia-smi -q|grep Attached|awk <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 0 $((<span class="variable">$GPUNUM</span>-<span class="number">1</span>)))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;GPU<span class="variable">$i</span> Utilization: &quot;</span>`nvidia-smi -q -i <span class="variable">$i</span> -d Utilization|sed -n <span class="string">&quot;11p&quot;</span>|awk <span class="string">&#x27;&#123;print $3$4&#125;&#x27;</span>`\</span><br><span class="line">         <span class="string">&quot;Memory Used: &quot;</span>`nvidia-smi -q -i <span class="variable">$i</span> -d Utilization|sed -n <span class="string">&quot;12p&quot;</span>|awk <span class="string">&#x27;&#123;print $3$4&#125;&#x27;</span>`;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="35-diskspace"><a href="#35-diskspace" class="headerlink" title="35-diskspace"></a>35-diskspace</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># config</span></span><br><span class="line">max_usage=90</span><br><span class="line">bar_width=50</span><br><span class="line"><span class="comment"># colors</span></span><br><span class="line">white=<span class="string">&quot;\e[39m&quot;</span></span><br><span class="line">green=<span class="string">&quot;\e[1;32m&quot;</span></span><br><span class="line">red=<span class="string">&quot;\e[1;31m&quot;</span></span><br><span class="line">dim=<span class="string">&quot;\e[2m&quot;</span></span><br><span class="line">undim=<span class="string">&quot;\e[0m&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># disk usage: ignore zfs, squashfs &amp; tmpfs</span></span><br><span class="line"><span class="built_in">mapfile</span> -t dfs &lt; &lt;(<span class="built_in">df</span> -H -x zfs -x squashfs -x tmpfs -x devtmpfs -x overlay --output=target,pcent,size | <span class="built_in">tail</span> -n+2)</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\ndisk usage:\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;dfs[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># get disk usage</span></span><br><span class="line">    usage=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$line</span>&quot;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | sed <span class="string">&#x27;s/%//&#x27;</span>)</span><br><span class="line">    used_width=$(((<span class="variable">$usage</span>*<span class="variable">$bar_width</span>)/<span class="number">100</span>))</span><br><span class="line">    <span class="comment"># color is green if usage &lt; max_usage, else red</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;usage&#125;</span>&quot;</span> -ge <span class="string">&quot;<span class="variable">$&#123;max_usage&#125;</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        color=<span class="variable">$red</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        color=<span class="variable">$green</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="comment"># print green/red bar until used_width</span></span><br><span class="line">    bar=<span class="string">&quot;[<span class="variable">$&#123;color&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">for</span> ((i=<span class="number">0</span>; i&lt;<span class="variable">$used_width</span>; i++)); <span class="keyword">do</span></span><br><span class="line">        bar+=<span class="string">&quot;=&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="comment"># print dimmmed bar until end</span></span><br><span class="line">    bar+=<span class="string">&quot;<span class="variable">$&#123;white&#125;</span><span class="variable">$&#123;dim&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">for</span> ((i=<span class="variable">$used_width</span>; i&lt;<span class="variable">$bar_width</span>; i++)); <span class="keyword">do</span></span><br><span class="line">        bar+=<span class="string">&quot;=&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    bar+=<span class="string">&quot;<span class="variable">$&#123;undim&#125;</span>]&quot;</span></span><br><span class="line">    <span class="comment"># print usage line &amp; bar</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;line&#125;</span>&quot;</span> | awk <span class="string">&#x27;&#123; printf(&quot;%-31s%+3s used out of %+4s\n&quot;, $1, $2, $3); &#125;&#x27;</span> | sed -e <span class="string">&#x27;s/^/  /&#x27;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;bar&#125;</span>&quot;</span> | sed -e <span class="string">&#x27;s/^/  /&#x27;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="40-services"><a href="#40-services" class="headerlink" title="40-services"></a>40-services</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set column width</span></span><br><span class="line">COLUMNS=3</span><br><span class="line"><span class="comment"># colors</span></span><br><span class="line">green=<span class="string">&quot;\e[1;32m&quot;</span></span><br><span class="line">red=<span class="string">&quot;\e[1;31m&quot;</span></span><br><span class="line">undim=<span class="string">&quot;\e[0m&quot;</span></span><br><span class="line"></span><br><span class="line">services=(<span class="string">&quot;ssh&quot;</span> <span class="string">&quot;docker&quot;</span> <span class="string">&quot;apache2&quot;</span> <span class="string">&quot;nginx&quot;</span> <span class="string">&quot;mysql&quot;</span> <span class="string">&quot;networking&quot;</span> <span class="string">&quot;ufw&quot;</span> <span class="string">&quot;xrdp&quot;</span>)</span><br><span class="line"><span class="comment"># sort services</span></span><br><span class="line">IFS=$<span class="string">&#x27;\n&#x27;</span> services=($(<span class="built_in">sort</span> &lt;&lt;&lt;<span class="string">&quot;<span class="variable">$&#123;services[*]&#125;</span>&quot;</span>))</span><br><span class="line"><span class="built_in">unset</span> IFS</span><br><span class="line"></span><br><span class="line">service_status=()</span><br><span class="line"><span class="comment"># get status of all services</span></span><br><span class="line"><span class="keyword">for</span> service <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;services[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    service_status+=($(systemctl is-active <span class="string">&quot;<span class="variable">$service</span>&quot;</span>))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">out=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;!services[@]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># color green if service is active, else red</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$&#123;service_status[$i]&#125;</span>&quot;</span> == <span class="string">&quot;active&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        out+=<span class="string">&quot;<span class="variable">$&#123;services[$i]&#125;</span>:,<span class="variable">$&#123;green&#125;</span><span class="variable">$&#123;service_status[$i]&#125;</span><span class="variable">$&#123;undim&#125;</span>,&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        out+=<span class="string">&quot;<span class="variable">$&#123;services[$i]&#125;</span>:,<span class="variable">$&#123;red&#125;</span><span class="variable">$&#123;service_status[$i]&#125;</span><span class="variable">$&#123;undim&#125;</span>,&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="comment"># insert \n every $COLUMNS column</span></span><br><span class="line">    <span class="keyword">if</span> [ $(((<span class="variable">$i</span>+<span class="number">1</span>) % <span class="variable">$COLUMNS</span>)) -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        out+=<span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">out+=<span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\nservices:\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;<span class="variable">$out</span>&quot;</span> | column -ts $<span class="string">&#x27;,&#x27;</span> | sed -e <span class="string">&#x27;s/^/  /&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一些有用的显示服务器信息的脚本&quot;&gt;&lt;a href=&quot;#一些有用的显示服务器信息的脚本&quot; class=&quot;headerlink&quot; title=&quot;一些有用的显示服务器信息的脚本&quot;&gt;&lt;/a&gt;一些有用的显示服务器信息的脚本&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;ssh登录</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://blog.zaqai.com/2023/12/31/test/"/>
    <id>https://blog.zaqai.com/2023/12/31/test/</id>
    <published>2023-12-31T09:09:02.000Z</published>
    <updated>2023-12-31T09:09:32.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="this-a-test"><a href="#this-a-test" class="headerlink" title="this a test"></a>this a test</h1><p>this is body</p><ul><li>list test</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;this-a-test&quot;&gt;&lt;a href=&quot;#this-a-test&quot; class=&quot;headerlink&quot; title=&quot;this a test&quot;&gt;&lt;/a&gt;this a test&lt;/h1&gt;&lt;p&gt;this is body&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;list tes</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.zaqai.com/2023/12/31/hello-world/"/>
    <id>https://blog.zaqai.com/2023/12/31/hello-world/</id>
    <published>2023-12-31T08:47:44.045Z</published>
    <updated>2023-12-31T08:47:44.045Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
